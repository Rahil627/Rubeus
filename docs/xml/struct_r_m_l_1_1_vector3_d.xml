<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="struct_r_m_l_1_1_vector3_d" kind="struct" language="C++" prot="public">
    <compoundname>RML::Vector3D</compoundname>
    <includes refid="rubeus__maths__library_8h" local="no">rubeus_maths_library.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_r_m_l_1_1_vector3_d_1a6a44f9334ebb4ae0ca6634d195914016" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RML::Vector3D::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>The x coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="329" column="1" bodyfile="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" bodystart="329" bodyend="-1"/>
        <referencedby refid="class_rubeus_1_1_awerere_1_1_a_box_collider_1a9337b5b543f7157f1fc49bea74e77287" compoundref="awerere__box__collider__object_8h" startline="145" endline="145">Rubeus::Awerere::ABoxCollider::getLowerRightBound</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_r_m_l_1_1_vector3_d_1a967dbb984259d52bc299e9c145ccb59b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RML::Vector3D::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>The y coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="332" column="1" bodyfile="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" bodystart="332" bodyend="-1"/>
        <referencedby refid="class_rubeus_1_1_awerere_1_1_a_box_collider_1a7891f0d698ca55f899f34ebffdb84524" compoundref="awerere__box__collider__object_8h" startline="136" endline="136">Rubeus::Awerere::ABoxCollider::getUpperLeftBound</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_r_m_l_1_1_vector3_d_1aa01bf2be80215c0a25e2c6cad6349767" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RML::Vector3D::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
<para>The z coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="335" column="1" bodyfile="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a6b8c12f17d045c8a43b674ebec7190fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RML::Vector3D::Vector3D</definition>
        <argsstring>()</argsstring>
        <name>Vector3D</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a9bc8a46ea59896d0bdc1048f7bcd1a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RML::Vector3D::Vector3D</definition>
        <argsstring>(const float &amp;x, const float &amp;y, const float &amp;z)</argsstring>
        <name>Vector3D</name>
        <param>
          <type>const float &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z coordinate. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a5e4222f3ef8a53a78903db74de855569" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RML::Vector3D::getLength</definition>
        <argsstring>(Vector3D &amp;vector) const</argsstring>
        <name>getLength</name>
        <param>
          <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Gets length of vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a6bd22eee58b37b3b4b91754571b1e48b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RML::Vector3D::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
<para>Gets length of this vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a5da7b6fe2e19a24e82772cf22e4c2867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector2_d" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D RML::Vector3D::getVector2D</definition>
        <argsstring>()</argsstring>
        <name>getVector2D</name>
        <briefdescription>
<para>Return a <ref refid="struct_r_m_l_1_1_vector2_d" kindref="compound">Vector2D</ref> containing the x and y values from this <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> respectively. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1ae490026de2bc1c7c69543686d5677d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::add</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Adds other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other to add.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to a <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a5831741dc88ac4abba376953c37c760b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::subtract</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>subtract</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtracts the given other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to a <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a8b30fe6010364d9f7c0a9f70d79cd763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::multiply</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>multiply</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Multiplies the given other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to a <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a3b6d80bab45142aec132a0346700c359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RML::Vector3D::multiplyDot</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>multiplyDot</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Multiplies the given other (Dot product). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1adc2b1e17647096ae521dcf6d311865f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::multiplyCross</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>multiplyCross</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Multiplies the given other (Cross product). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1ae2d337be1d28c3dd69b8bbf0e28edd96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::multiplyFloat</definition>
        <argsstring>(const float &amp;other)</argsstring>
        <name>multiplyFloat</name>
        <param>
          <type>const float &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Multiplies the given float with this (Scaling). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a15ac875f67d72fba4edc3e92432fd5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::divide</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>divide</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Divides the given other. Returns [a/x , b/y , c/z] if [a , b , c] is divided by [x , y , z]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to a <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a76389860cf59e006774350b7dc6c8ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
        <definition>Vector3D RML::Vector3D::maxVector</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>maxVector</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> with only the maximum coordinates on each axes as compared to the given other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to a <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a1b587cc95c5c86fcc9889708e6a8bdbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RML::Vector3D::maxComponent</definition>
        <argsstring>()</argsstring>
        <name>maxComponent</name>
        <briefdescription>
<para>Return the maximum coordinate across all axes. </para>        </briefdescription>
        <detaileddescription>
<para>Return the maximum coordinate across X and Y axes.</para><para><simplesect kind="return"><para>The maximum coordinate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a3a3cbf18514354e026e7fe6805a24c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RML::Vector3D::maxXYComponent</definition>
        <argsstring>()</argsstring>
        <name>maxXYComponent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="490" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a8c96bef6d9e1bf4fcafcdb98e4f0255a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::toUnitVector</definition>
        <argsstring>()</argsstring>
        <name>toUnitVector</name>
        <briefdescription>
<para>Convert this vector to a unit vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The unit vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1ad35a19cce41b5875084eb04096af7339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::abs</definition>
        <argsstring>()</argsstring>
        <name>abs</name>
        <briefdescription>
<para>Take modulus of all coordinates. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The abs vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a048a3d9ed505aee2e637117036d23d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RML::Vector3D::operator==</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
<para>Int equality operator.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the parameters are considered equivalent.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the all parameters are equal to other. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a637658f7699a29b1025e4a242f331467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RML::Vector3D::operator==</definition>
        <argsstring>(const int other)</argsstring>
        <name>operator==</name>
        <param>
          <type>const int</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a8bd28d3db1f8d6ddf6d578b6f6be40a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RML::Vector3D::operator!=</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the parameters are not considered equivalent. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1aa4132db4ccf37586c84e4dab071085e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator+=</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a7267d6915bb2b74d41c0a06d24ce9ef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator-=</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a9036303c0ed8d11f739d1757da352c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator*=</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Multiplication assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="658" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_r_m_l_1_1_vector3_d_1a4bf33c2319ba86127295fdbf0f4ee7b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator/=</definition>
        <argsstring>(const Vector3D &amp;other)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Division assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="669" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1a9c0cc562b338de248976b51a71a9be09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream &amp; RML::Vector3D::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const Vector3D &amp;vector)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Put to operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the stream to be put to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> to be put to stream object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the stream been put to. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1aa112a27ed9ff973b5270845524f6990f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator+</definition>
        <argsstring>(Vector3D left, const Vector3D &amp;right)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1ab61d3901bae4ab8fb099c19f86d5065e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator-</definition>
        <argsstring>(Vector3D left, const Vector3D &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Subtraction operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1a8a11ba64eb61962fb1cc92a244890c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator*</definition>
        <argsstring>(Vector3D left, const Vector3D &amp;right)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Multiplication operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1aba9131c2ef8fadf8a3f283052a8481c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; operator*</definition>
        <argsstring>(const Vector3D vector, const float &amp;other)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Float multiplication operator. (Scaling) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="568" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1a1331e2fbb42bb468bcd9cec0794bce7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator/</definition>
        <argsstring>(Vector3D left, const Vector3D &amp;right)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Division operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_r_m_l_1_1_vector3_d_1a6a9aa42a570373cf07a5beba48218352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref> &amp;</type>
        <definition>Vector3D &amp; RML::Vector3D::operator/</definition>
        <argsstring>(const Vector3D vector, const float &amp;other)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">Vector3D</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>other</declname>
          <defname>right</defname>
        </param>
        <briefdescription>
<para>Float division operator. (Down scaling) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="592" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A vector 3d. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" line="327" column="1" bodyfile="D:/CPP Projects/Rubeus Project/Rubeus/RubeusCore/Include/rubeus_maths_library.h" bodystart="326" bodyend="670"/>
    <listofallmembers>
      <member refid="struct_r_m_l_1_1_vector3_d_1ad35a19cce41b5875084eb04096af7339" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>abs</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1ae490026de2bc1c7c69543686d5677d33" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>add</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a15ac875f67d72fba4edc3e92432fd5a5" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>divide</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a5e4222f3ef8a53a78903db74de855569" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>getLength</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a6bd22eee58b37b3b4b91754571b1e48b" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>getLength</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a5da7b6fe2e19a24e82772cf22e4c2867" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>getVector2D</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a1b587cc95c5c86fcc9889708e6a8bdbb" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>maxComponent</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a76389860cf59e006774350b7dc6c8ac0" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>maxVector</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a3a3cbf18514354e026e7fe6805a24c64" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>maxXYComponent</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a8b30fe6010364d9f7c0a9f70d79cd763" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>multiply</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1adc2b1e17647096ae521dcf6d311865f4" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>multiplyCross</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a3b6d80bab45142aec132a0346700c359" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>multiplyDot</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1ae2d337be1d28c3dd69b8bbf0e28edd96" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>multiplyFloat</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a8bd28d3db1f8d6ddf6d578b6f6be40a9" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator!=</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a8a11ba64eb61962fb1cc92a244890c7b" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator*</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1aba9131c2ef8fadf8a3f283052a8481c2" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator*</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a9036303c0ed8d11f739d1757da352c91" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator*=</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1aa112a27ed9ff973b5270845524f6990f" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator+</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1aa4132db4ccf37586c84e4dab071085e5" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator+=</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1ab61d3901bae4ab8fb099c19f86d5065e" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator-</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a7267d6915bb2b74d41c0a06d24ce9ef9" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator-=</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a1331e2fbb42bb468bcd9cec0794bce7b" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator/</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a6a9aa42a570373cf07a5beba48218352" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator/</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a4bf33c2319ba86127295fdbf0f4ee7b9" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator/=</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a9c0cc562b338de248976b51a71a9be09" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a048a3d9ed505aee2e637117036d23d43" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator==</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a637658f7699a29b1025e4a242f331467" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>operator==</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a5831741dc88ac4abba376953c37c760b" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>subtract</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a8c96bef6d9e1bf4fcafcdb98e4f0255a" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>toUnitVector</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a6b8c12f17d045c8a43b674ebec7190fe" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>Vector3D</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a9bc8a46ea59896d0bdc1048f7bcd1a3d" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>Vector3D</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a6a44f9334ebb4ae0ca6634d195914016" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>x</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1a967dbb984259d52bc299e9c145ccb59b" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>y</name></member>
      <member refid="struct_r_m_l_1_1_vector3_d_1aa01bf2be80215c0a25e2c6cad6349767" prot="public" virt="non-virtual"><scope>RML::Vector3D</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
